@model<evolution_communication>
@priority=2;
/*
n is the number of vertices in the graph
k is the maximum size of vertex cover
e is the number of edges in the graph
A{i,j} represents an edge connecting vertices i and j in the graph
*/


def vertexCover(n, k, e) {
@mu = [ [ ]'2]'1;
@ms(1)= v{1}, v{2}, v{3}, v{4}, h0, A{1,2}, A{2,3}, A{3,4}, A{4,5}, c*k, d*(e-k);

/*evolution rules for membrane 1*/
[A{i,j}]'1 --> [B{i,j}] : 1 <= i < j, 1< j<=n;
[B{i,j}]'1 --> [s{i}] : 1 <= i < j, 1< j<=n;
[B{i,j}]'1 --> [s{j}] : 1 <= i < j , 1< j<=n;
[v{i}]'1-->[vp{i}]$1: 1 <= i <= n;
[s{i}]'1 --> [l{i}]: 1 <= i <= n;
[h0]'1--> [h1];
[h1]'1--> [h2];
[h2]'1--> [h3];
[h3]'1--> [h4];
[h4]'1--> [yes]$1;
[c]'1--> [cp]$2;
[d]'1--> [dp, a0]$1;
[dp]'1--> [dpp];
[dpp]'1--> []$1;
[a2]'1--> [no]$1;
/*communication rules for membrane 1*/
[yes]'1$1-->yes[];
[no]'1$1-->no[];

/*evolution rules for membrane 2*/
[vp{i}]'2-->[p{i}] : 1 <= i <= n;
[p{i}]'2-->[y] : 1 <= i <= n;
[s{i}]'2--> [u{i}*(n-2)]$n-2 : 1 <= i <= n;
[cp]'2-->[]$1;
[a0]'2--> [a1];
[a1]'2--> [a2];
 /*communication rules for membrane 2*/
vp{i}[]'2$1-->[vp{i}]: 1 <= i <= n;
s{i}[p{i}]'2$1,$1-->p{i}[s{i}] : 1 <=i <= n;
cp[]'2$1--> [cp];
a0[]'2$1 -->[a0];
l{i}[u{i}]'2$1,$1--> u{i}[l{i}]  : 1 <= i <= n;
h4[a2]'2$1,$1 -->a2[h4];



}

def main(){
	call vertexCover(4, 1, 3);
}