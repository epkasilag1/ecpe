@model<evolution_communication>
@priority=1;
/*
n is the number of vertices in the graph
r is the maximum size of vertex cover
e is the number of edges in the graph
A{i,j} represents an edge connecting vertices i and j in the graph
*/


def vertexCover(n, r, e) {
@mu = [ []'2[]'3[]'4]'1;
@ms(1)= v{1}, v{2}, v{3}, v{4}, v{5},a0,b0, A{1,2}, A{1,3}, A{1,5}, A{2,3}, A{3,4}, A{4,5}, c*r, d*(e-r);

/*evolution rules for membrane 1*/
[A{i,j}]'1 --> [s{i}]$1 : 1 <= i < j, 1< j<=n;
[A{i,j}]'1 --> [s{j}]$1 : 1 <= i < j , 1< j<=n;
[v{i}]'1-->[vp{i}]$1: 1 <= i <= n;
[c]'1--> [cp]$2;
[d]'1--> [dp]$1;
[b0]'1 --> [b1]$1;
[b2]'1 --> [b3]$1;
[b4]'1 --> [b5,m]$2;
[b6]'1 --> [b7]$1;
[b8]'1 --> [yes]$1;
[a0]'1 --> [a1]$1;
[a2]'1 --> [a3]$1;
[a4]'1 --> [a5]$1;
/*communication rules for membrane 1*/
[yes]'1$1-->yes[];
[no]'1$1-->no[];

/*evolution rules for membrane 2*/
[vp{i}]'2-->[p{i}] : 1 <= i <= n;
[cp]'2-->[]$1;

/*communication rules for membrane 2*/

vp{i}[]'2$1-->[vp{i}]: 1 <= i <= n;
s{i}[p{i}]'2$1,$1-->p{i}[s{i}] : 1 <=i <= n;
cp[]'2$1--> [cp];


/*evolution rules for membrane 3*/
[dp]'3--> []$1;
[p{i}]'3--> [u{i}*(n-2)] : 1 <= i < j, 1<j<= n;
[a1]'3--> [a2]$1;
[a3]'3--> [a4]$1;
[a5]'3--> [no];
/*communication rules for membrane 3*/
p{i}[]'3$1-->[p{i}]: 1 <= i <= n;
s{i}[u{i}]'3$1,$1 --> u{i}[s{i}] : 1<=i <=n;
dp[]'3$1--> [dp];
a1[]'3$1--> [a1];
a3[]'3$1--> [a3];
a5[]'3$1--> [a5];
[a2]'3$1--> a2[];
[a4]'3$1--> a4[];
m[no]'3$1,$1 --> no[m];

/*evolution rules in membrane 4*/
[b3]'4-->[b4]$1;
[b1]'4-->[b2]$1;
[b5]'4-->[b6]$1;
[b7]'4-->[b8]$1;
/*communication rules in membrane 4*/
b1[]'4$1--> [b1];
b3[]'4$1--> [b3];
b5[]'4$1--> [b5];
b7[]'4$1--> [b7];
[b2]'4$1--> b2[];
[b4]'4$1--> b4[];
[b6]'4$1--> b6[];
m[b8]'4$1,$1--> b8[m];

}

def main(){
	call vertexCover(5, 3, 6);
}